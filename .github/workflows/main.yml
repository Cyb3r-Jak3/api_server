name: Build & Check

on: [push]


jobs:

  Python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('**/requirements.txt', '**/requirements-dev.txts') }}
  
    - name: Install dependencies
      run: pip install -r requirements-dev.txt

    - name: Lint with Black, Pylint, Flake8, and Bandit
      run: make lint

    - name: Run Pytests
      run: make test

    - name: Report results to DeepSource
      run: |
        coverage xml
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key python --value-file ./coverage.xml
      env: 
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

  Docker:
    needs: Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login To GitHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Cache Docker layers
        uses: actions/cache@v2.1.5
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: buildx

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/cyb3r-jak3/api_server
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
          labels: |
            org.label-schema.vcs-url=https://github.com/Cyb3r-Jak3/api_server.git
            org.label-schema.schema-version=1.0.0-rc1

      - name: Build and Push
        uses: docker/build-push-action@v2.4.0
        with:
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
